// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CalculateWeights
List CalculateWeights(IntegerVector h, NumericVector w, NumericMatrix g);
RcppExport SEXP _graphicalMCP_CalculateWeights(SEXP hSEXP, SEXP wSEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type g(gSEXP);
    rcpp_result_gen = Rcpp::wrap(CalculateWeights(h, w, g));
    return rcpp_result_gen;
END_RCPP
}

RcppExport void cgMCP(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void graphmult(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void graphproc(void *, void *, void *, void *, void *, void *, void *, void *, void *);

static const R_CallMethodDef CallEntries[] = {
    {"_graphicalMCP_CalculateWeights", (DL_FUNC) &_graphicalMCP_CalculateWeights, 3},
    {"cgMCP",     (DL_FUNC) &cgMCP,      8},
    {"graphmult", (DL_FUNC) &graphmult, 14},
    {"graphproc", (DL_FUNC) &graphproc,  9},
    {NULL, NULL, 0}
};

RcppExport void R_init_graphicalMCP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
