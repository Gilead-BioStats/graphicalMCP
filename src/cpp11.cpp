// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// power_bonferroni.cpp
writable::integers graph_test_shortcut_cpp_(writable::doubles hypotheses, writable::doubles_matrix<> transitions, doubles p, double alpha);
extern "C" SEXP _graphicalMCP_graph_test_shortcut_cpp_(SEXP hypotheses, SEXP transitions, SEXP p, SEXP alpha) {
  BEGIN_CPP11
    return cpp11::as_sexp(graph_test_shortcut_cpp_(cpp11::as_cpp<cpp11::decay_t<writable::doubles>>(hypotheses), cpp11::as_cpp<cpp11::decay_t<writable::doubles_matrix<>>>(transitions), cpp11::as_cpp<cpp11::decay_t<doubles>>(p), cpp11::as_cpp<cpp11::decay_t<double>>(alpha)));
  END_CPP11
}
// power_bonferroni.cpp
integers_matrix<> power_shortcut_cpp(writable::doubles hypotheses, writable::doubles_matrix<> transitions, doubles_matrix<> p_mat, double alpha);
extern "C" SEXP _graphicalMCP_power_shortcut_cpp(SEXP hypotheses, SEXP transitions, SEXP p_mat, SEXP alpha) {
  BEGIN_CPP11
    return cpp11::as_sexp(power_shortcut_cpp(cpp11::as_cpp<cpp11::decay_t<writable::doubles>>(hypotheses), cpp11::as_cpp<cpp11::decay_t<writable::doubles_matrix<>>>(transitions), cpp11::as_cpp<cpp11::decay_t<doubles_matrix<>>>(p_mat), cpp11::as_cpp<cpp11::decay_t<double>>(alpha)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_graphicalMCP_graph_test_shortcut_cpp_", (DL_FUNC) &_graphicalMCP_graph_test_shortcut_cpp_, 4},
    {"_graphicalMCP_power_shortcut_cpp",       (DL_FUNC) &_graphicalMCP_power_shortcut_cpp,       4},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_graphicalMCP(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
