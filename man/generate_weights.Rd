% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_weights.R,
%   R/generate_weights_recursive.R, R/gw_original.R
\name{generate_weights}
\alias{generate_weights}
\alias{generate_weights_recursive}
\alias{gw_original}
\title{Generate weights for each intersections hypothesis in the full closure tree
of an MCP graph}
\usage{
generate_weights(graph)

generate_weights_recursive(graph)

gw_original(graph)
}
\arguments{
\item{graph}{An MCP graph as created by \code{create_graph()}}
}
\value{
A numeric matrix of all intersection hypothesis weights. Each row
corresponds to a single intersection hypothesis. The first half of the
columns indicate which hypotheses are included in the given intersection
hypothesis, and the second half of columns are the weights
}
\description{
Generate weights for each intersections hypothesis in the full closure tree
of an MCP graph
}
\section{Performance}{

Much thought was given to the performance of this code, as the memory and
time usage can grow quickly as graph size grows. On the systems used for
testing, a size 10 graph had a median run time of 20-60 ms. Run time
increases at a rate of O(2 ^ n), so e.g. a size 5 graph takes approximately
twice as long to run as a size 4 graph. See
\code{vignette("generate-weights-performance")} for a verbose analysis and
explanation
}

\examples{

par_gate <- create_graph(
  hypotheses = c(.5, .5, 0, 0),
  transitions = rbind(
    c(0, 0, 1, 0),
    c(0, 0, 0, 1),
    c(0, 1, 0, 0),
    c(1, 0, 0, 0)
  )
)

generate_weights(par_gate)

}
