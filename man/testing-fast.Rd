% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_tests.R
\name{graph_test_closure_fast}
\alias{graph_test_closure_fast}
\alias{graph_test_shortcut_fast}
\title{Calculate hypothesis rejection results efficiently}
\usage{
graph_test_closure_fast(p, alpha, adjusted_weights, matrix_intersections)

graph_test_shortcut_fast(p, alpha, adjusted_weights)
}
\arguments{
\item{p}{A numeric vector of p-values}

\item{alpha}{A numeric scalar specifying the global significance level for
testing}

\item{adjusted_weights}{The weights (second half of columns) from
\code{\link[=graph_generate_weights]{graph_generate_weights()}} output, adjusted by the appropriate testing
algorithm (Bonferroni, Simes, or parametric)}

\item{graph}{An initial graph as returned by \code{\link[=graph_create]{graph_create()}}}

\item{intersections}{The first half of columns from
\code{\link[=graph_generate_weights]{graph_generate_weights()}} output, indicating which hypotheses are
contained in each intersection}
}
\value{
A logical or integer vector of results indicating whether each
hypothesis can be accepted or rejected globally.
}
\description{
For insight and nice reporting, prefer \code{\link[=graph_test_closure]{graph_test_closure()}} or
\code{\link[=graph_test_shortcut]{graph_test_shortcut()}} with all of their options. They are reasonably fast
for interactive use. However in order to minimize power run time, more
efficient testing functions are available. The power simulation can be
segmented so that certain parts, like generating weights and calculating some
adjusted weights, can be done only a single time. The closure testing
function has been stripped down to just a few vectorized lines for
efficiency. A separate optimized function is available for testing a graph
with the Bonferroni sequential shortcut.
}
\examples{
par_gate <- simple_successive_1()
num_hyps <- length(par_gate$hypotheses)

p <- c(.001, .02, .002, .03)

weighting_strategy <- graph_generate_weights(par_gate)
intersections <- weighting_strategy[, seq_len(num_hyps), drop = FALSE]
adjusted_weights <-
  weighting_strategy[, seq_len(num_hyps) + num_hyps, drop = FALSE]

graphicalMCP:::graph_test_closure_fast(
  p,
  .025,
  adjusted_weights,
  intersections
)
graphicalMCP:::graph_test_shortcut_fast(
  p,
  .025,
  adjusted_weights
)
}
\references{
Bretz, F., Maurer, W., Brannath, W., and Posch, M. (2009). A graphical
approach to sequentially rejective multiple test procedures. Statistics in
Medicine, 28(4), 586b

Bretz, F., Maurer, W., and Hommel, G. (2011). Test and power considerations
for multiple endpoint analyses using sequentially rejective graphical
procedures. Statistics in Medicine, 30(13), 1489b
\url{https://doi.org/10.1002/sim.3988}

Bretz, F., Posch, M., Glimm, E., Klinglmueller, F., Maurer, W., and Rohmeyer,
K. (2011). Graphical approaches for multiple comparison procedures using
weighted Bonferroni, Simes, or parametric tests. Biometrical Journal, 53(6),
894b

Lu, K. (2016). Graphical approaches using a Bonferroni mixture of weighted
Simes tests. Statistics in Medicine, 35(22), 4041b
\url{https://doi.org/10.1002/sim.6985}

Xi, D., Glimm, E., Maurer, W., and Bretz, F. (2017). A unified framework for
weighted parametric multiple test procedures. Biometrical Journal, 59(5),
918b

Xi, D., and Bretz, F. (2019). Symmetric graphs for equally weighted tests,
with application to the Hochberg procedure. Statistics in Medicine, 38(27),
5268b

Rohmeyer K, Klinglmueller F (2020). \emph{gMCP: Graph Based Multiple Test
Procedures}. R package version 0.8-15,
\url{https://cran.r-project.org/package=gMCP}.
}
\seealso{
\code{\link[=graph_test_closure]{graph_test_closure()}}, \code{\link[=graph_test_shortcut]{graph_test_shortcut()}}
}
\keyword{internal}
