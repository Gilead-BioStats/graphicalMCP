% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_tests.R
\name{test_graph_fast_vms}
\alias{test_graph_fast_vms}
\title{Test a graph efficiently}
\usage{
test_graph_fast_vms(p, alpha, intersections)
}
\arguments{
\item{p}{A numeric vector of p-values}

\item{alpha}{A numeric scalar specifying the global level to test at}

\item{intersections}{A compact representation of the output created by
\code{generate_weights()}}
}
\value{
A logical vector of results indicating whether each hypothesis can be
accepted or rejected globally
}
\description{
For insight and nice reporting, prefer \code{test_graph()} with all of its
options. It is reasonably fast for interactive use. However in order to
minimize power run time, a more efficient testing function has been written.
The power simulation can be segmented so that certain parts, like generating
weights and calculating some critical values, can be done only a single time.
The actual testing function has been stripped down to just a few vectorized
lines for efficiency
}
\examples{
par_gate <- simple_successive_1()
graph_size <- length(par_gate$hypotheses)

p <- c(.001, .02, .002, .03)

weights <- generate_weights(par_gate)
compact_weights <- ifelse(
  weights[, seq_len(graph_size), drop = FALSE],
  weights[, seq_len(graph_size) + graph_size, drop = FALSE],
  NA
)

test_graph_fast_vms(p, .025, compact_weights)
}
