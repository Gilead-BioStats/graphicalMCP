% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_critical.R
\name{c_function}
\alias{c_function}
\alias{solve_c}
\alias{add_critical}
\title{Calculate parametric testing critical values for the closure of a graph}
\usage{
c_function(x, w, corr, alpha)

solve_c(w, corr, alpha)

add_critical(graph, corr, alpha, groups)
}
\arguments{
\item{x}{The root to solve for with \code{uniroot()}}

\item{w}{A numeric vector of graph weights}

\item{corr}{A numeric matrix specifying the correlation between the test
statistics of hypotheses to be tested using parametric testing}

\item{alpha}{A numeric scalar specifying the global significance level for
parametric testing}

\item{graph}{An object with class \code{initial_graph} as returned by
\code{create_graph()}}

\item{groups}{A list of numeric vectors specifying hypotheses to test
together}
}
\value{
Outputs:
\itemize{
\item For \code{add_critical()}, a list of matrices. Each list element is the
output of \code{generate_weights()} for a single group with the critical value
for each intersection appended as an additional column.
\item For \code{c_function()}, the critical value for the given group
}
}
\description{
Calculate parametric testing critical values for the closure of a graph
}
\examples{
g <- bonferroni_holm(6)
gw <- generate_weights(g)

add_critical(gw, diag(6), .05, list(1:3, 4:6))

# Can handle groups only containing some hypotheses
add_critical(gw, diag(6), .05, list(1:2, c(4, 6)))
}
