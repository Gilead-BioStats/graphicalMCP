% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_critical.R
\name{c_function}
\alias{c_function}
\alias{solve_c}
\alias{calculate_critical_parametric}
\alias{calculate_critical_simes}
\title{Calculate updated hypothesis weights for the closure of a graph}
\usage{
c_function(x, weights, corr, alpha)

solve_c(weights, corr, alpha)

calculate_critical_parametric(intersections, corr, alpha, groups)

calculate_critical_simes(intersections, p, groups)
}
\arguments{
\item{x}{The root to solve for with \code{\link[stats:uniroot]{stats::uniroot()}}}

\item{weights}{A numeric vector of hypothesis weights}

\item{corr}{A numeric matrix of correlations between hypotheses' test
statistics}

\item{alpha}{A numeric scalar specifying the global significance level for
testing}

\item{intersections}{For parametric, a compact representation of
\code{\link[=generate_weights]{generate_weights()}} output, where missing hypotheses get a missing value
for weights, and h-vectors are dropped. For Simes, just the weights from
\code{\link[=generate_weights]{generate_weights()}} output}

\item{groups}{A list of numeric vectors specifying hypotheses to test
together}

\item{p}{A numeric vector of p-values}
}
\value{
Outputs:
\itemize{
\item For \verb{calculate_critical_*()}, a matrix with the same shape as
\code{intersections}, where the weights have been adjusted according to the
specified adjustment method
\item For \code{c_function()}, the critical value for the given group
}
}
\description{
The weights created by \code{\link[=generate_weights]{generate_weights()}} work immediately for Bonferroni
testing, but parametric and Simes testing require additional calculations.
The \verb{calculate_critical_*()} functions apply parametric or Simes weight
increases to get updated weights for testing. They also subset the weights
columns by the appropriate groups
}
\examples{
p <- 1:6 / 200

g <- bonferroni_holm(6)
gw_large <- generate_weights(g)

gw_0 <- gw_large[, 7:12]
gw <- ifelse(gw_large[, 1:6], gw_0, NA)

graphicalMCP:::calculate_critical_parametric(gw, diag(6), .05, list(1:3))
graphicalMCP:::calculate_critical_simes(gw_0, p, list(4:6))
}
\references{
Bretz, F., Maurer, W., Brannath, W., and Posch, M. (2009). A graphical
approach to sequentially rejective multiple test procedures. Statistics in
Medicine, 28(4), 586b

Bretz, F., Maurer, W., and Hommel, G. (2011). Test and power considerations
for multiple endpoint analyses using sequentially rejective graphical
procedures. Statistics in Medicine, 30(13), 1489b
\url{https://doi.org/10.1002/sim.3988}

Bretz, F., Posch, M., Glimm, E., Klinglmueller, F., Maurer, W., and Rohmeyer,
K. (2011). Graphical approaches for multiple comparison procedures using
weighted Bonferroni, Simes, or parametric tests. Biometrical Journal, 53(6),
894b

Lu, K. (2016). Graphical approaches using a Bonferroni mixture of weighted
Simes tests. Statistics in Medicine, 35(22), 4041b
\url{https://doi.org/10.1002/sim.6985}

Xi, D., Glimm, E., Maurer, W., and Bretz, F. (2017). A unified framework for
weighted parametric multiple test procedures. Biometrical Journal, 59(5),
918b

Xi, D., and Bretz, F. (2019). Symmetric graphs for equally weighted tests,
with application to the Hochberg procedure. Statistics in Medicine, 38(27),
5268b

Rohmeyer K, Klinglmueller F (2020). \emph{gMCP: Graph Based Multiple Test
Procedures}. R package version 0.8-15,
\url{https://cran.r-project.org/package=gMCP}.
}
\keyword{internal}
