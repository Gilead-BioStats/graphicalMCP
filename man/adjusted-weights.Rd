% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust_weights.R
\name{adjust_weights_parametric}
\alias{adjust_weights_parametric}
\alias{adjust_weights_simes}
\alias{c_value_function}
\alias{solve_c_parametric}
\title{Calculate updated hypothesis weights for the closure of a graph}
\usage{
adjust_weights_parametric(
  matrix_weights,
  matrix_intersections,
  corr,
  alpha,
  groups
)

adjust_weights_simes(matrix_weights, p, groups)

c_value_function(x, hypotheses, corr, alpha)

solve_c_parametric(hypotheses, corr, alpha)
}
\arguments{
\item{corr}{A numeric matrix of correlations between hypotheses' test
statistics}

\item{alpha}{A numeric scalar specifying the global significance level for
testing}

\item{groups}{A list of numeric vectors specifying hypotheses to test
together}

\item{p}{A numeric vector of p-values}

\item{x}{The root to solve for with \code{\link[stats:uniroot]{stats::uniroot()}}}

\item{hypotheses}{A numeric vector of hypothesis weights}

\item{weighting_strategy}{For parametric, a compact representation of
\code{\link[=graph_generate_weights]{graph_generate_weights()}} output, where missing hypotheses get a missing
value for weights, and h-vectors are dropped. For Simes, just the weights
from \code{\link[=graph_generate_weights]{graph_generate_weights()}} output}
}
\value{
Outputs:
\itemize{
\item For \verb{adjust_weights_*()}, a matrix with the same shape as
\code{weighting_strategy}, where the weights have been adjusted according to the
specified adjustment method
\item For \code{c_value_function()}, the \eqn{c_{J_h}} value for the given group,
according to Formula 6 of Xi et al. (2017).
}
}
\description{
The weights created by \code{\link[=graph_generate_weights]{graph_generate_weights()}} work immediately for
Bonferroni testing, but parametric and Simes testing require additional
calculations. The \verb{adjust_weights_*()} functions apply parametric or
Simes weight increases to get updated weights for testing. They also subset
the weights columns by the appropriate groups
}
\examples{
p <- 1:6 / 200

g <- bonferroni_holm(6)
gw_large <- graph_generate_weights(g)

gw_0 <- gw_large[, 7:12]
gw <- ifelse(gw_large[, 1:6], gw_0, NA)

graphicalMCP:::adjust_weights_parametric(
  gw_0,
  gw_large[, 1:6],
  diag(6),
  .05,
  list(1:3)
)

graphicalMCP:::adjust_weights_simes(gw_0, p, list(4:6))
}
\references{
Bretz, F., Maurer, W., Brannath, W., and Posch, M. (2009). A graphical
approach to sequentially rejective multiple test procedures. Statistics in
Medicine, 28(4), 586–604. \url{https://doi.org/10.1002/sim.3495}

Bretz, F., Maurer, W., and Hommel, G. (2011). Test and power considerations
for multiple endpoint analyses using sequentially rejective graphical
procedures. Statistics in Medicine, 30(13), 1489–1501.
\url{https://doi.org/10.1002/sim.3988}

Bretz, F., Posch, M., Glimm, E., Klinglmueller, F., Maurer, W., and Rohmeyer,
K. (2011). Graphical approaches for multiple comparison procedures using
weighted Bonferroni, Simes, or parametric tests. Biometrical Journal, 53(6),
894–913. \url{https://doi.org/10.1002/bimj.201000239}

Lu, K. (2016). Graphical approaches using a Bonferroni mixture of weighted
Simes tests. Statistics in Medicine, 35(22), 4041–4055.
\url{https://doi.org/10.1002/sim.6985}

Xi, D., Glimm, E., Maurer, W., and Bretz, F. (2017). A unified framework for
weighted parametric multiple test procedures. Biometrical Journal, 59(5),
918–931. \url{https://doi.org/10.1002/bimj.201600233}

Xi, D., and Bretz, F. (2019). Symmetric graphs for equally weighted tests,
with application to the Hochberg procedure. Statistics in Medicine, 38(27),
5268–5282. \url{https://doi.org/10.1002/sim.8375}

Rohmeyer K, Klinglmueller F (2020). \emph{gMCP: Graph Based Multiple Test
Procedures}. R package version 0.8-15,
\url{https://cran.r-project.org/package=gMCP}.
}
\keyword{internal}
