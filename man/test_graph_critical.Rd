% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_report_critical.R
\name{test_graph_critical}
\alias{test_graph_critical}
\title{Apply weighted Bonferroni, parametric, and Simes tests}
\usage{
test_graph_critical(
  graph,
  p_values,
  alpha = 0.05,
  tests = list(bonferroni = list(seq_along(graph$hypotheses)), parametric = NULL, simes =
    NULL),
  corr = NULL
)
}
\arguments{
\item{graph}{An initial graph as created by \code{create_graph()}}

\item{p_values}{A numeric vector of p-values, one for each hypothesis in the
graph}

\item{alpha}{A numeric vector of length 1 specifying the un-weighted alpha
level at which to test each hypothesis}

\item{tests}{A list with three elements, \code{bonferroni}, \code{simes}, and
\code{parametric}. Each element is a list of hypothesis groups to apply the
given test to. Each hypothesis must be specified exactly once, so that the
length of all elements of the list equals the number of hypotheses. The
default is to apply the weighted Bonferroni test to all hypotheses}

\item{corr}{(Optional) A correlation matrix for the test statistics of
\code{graph}. Diagonal entries should be 1. A known absence of correlation
should be entered as 0, and unknown correlation should be entered as NA.
This argument is only used for the parametric test. For each element of a
parametric testing group, the correlation matrix for that group's sub-graph
must be fully known}

\item{verbose}{(Optional) A logical value specifying whether to report
intersection/hypothesis-level testing details}
}
\value{
A \code{graph_report} object, consisting of
\itemize{
\item The initial graph being tested,
\item p-values & alpha used for tests,
\item Which hypotheses can be rejected, and
\item (Optionally) verbose test results matrix, including the results of
\code{generate_weights()} & test results for each intersection hypothesis
}
}
\description{
Apply weighted Bonferroni, parametric, and Simes tests
}
\examples{

hypotheses <- c(0.5, 0.5, 0, 0)
transitions <- rbind(
  c(0, 0, 1, 0),
  c(0, 0, 0, 1),
  c(0, 1, 0, 0),
  c(1, 0, 0, 0)
)

g <- create_graph(hypotheses, transitions)
p <- c(.01, .02, .05, .1)

corr <- matrix(nrow = 4, ncol = 4)
corr[3:4, 3:4] <- .5
diag(corr) <- 1

corr2 <- matrix(.5, nrow = 4, ncol = 4)
diag(corr2) <- 1

# The default is all Bonferroni with alpha = .05
test_graph_critical(g, p)

# But tests can be specified at the hypothesis-level
test_graph_critical(
  graph = g,
  p_values = p,
  alpha = .05,
  tests = list(
    bonferroni = 1,
    simes = list(c(2)),
    parametric = list(c(3, 4))
  ),
  corr = corr
)

# Note that these two are NOT equivalent
test_graph_critical(g, p, tests = list(parametric = list(1:4)), corr = corr2)
test_graph_critical(g, p, tests = list(parametric = list(1, 2, 3, 4)), corr = corr2)
}
